type Client {
  id: ID
  nombre: String!
  apellido: String!
  empresa: String
  emails: [Email]
  edad: Int
  tipo: TypeClient
  pedidos: [Pedido]
}
type Email {
  email: String
}

type Pedido {
  Producto: String
  precio: Int
}
type Query {
  getClients(limit:Int): [Client]
  getClient(id: ID): Client 
}

enum TypeClient {
  BASIC
  PREMIUM
}
""" Campos para los cliente nuevos"""
input ClientInput {
  id: ID
  nombre: String
  apellido: String
  empresa: String
  edad: Int
  emails: [EmailInput]
  tipo: TypeClient
  pedidos: [PedidoInput]
}
""" Campos para los pedidos nuevos"""
input PedidoInput {
  Producto: String
  precio: Int
}
input EmailInput {
  email: String
}

type Mutation {
  setClient(input: ClientInput): Client
  uploadClient(input: ClientInput): Client
  deleteClient(id: ID!): String

}
